##
pred<-function(nd,mod){  ##mod=fitted model
##nd=new data: dataframe with new values for independent variables
##             should have columns named equal to regressors (at least: could have more columns)
pred<-as.data.frame(predict(mod, newdata = nd, se.fit = TRUE))[-3]
high_int<-pred[1]+qnorm(.975)*pred[2]
low_int<-pred[1]-qnorm(.975)*pred[2]
pred<-cbind(pred,low_int,high_int)
pi<-predict(mod, newdata = nd, type="response")
int_pi<-plogis(as.numeric(pred[3:4]))
pred<-cbind(pred,pi,int_pi[1],int_pi[2])
colnames(pred)<-c("Est.Logit","Std. Err.","[95% Conf.","Interval]","Pr","95% lb","95% ub")
pred<-round(pred,6)
pred
}
oddsr<-function(mod){
r<-length(mod$coef)
odd<-stata(mod)[-r,]
odd[,c(1,5:6)]<-exp(odd[,c(1,5:6)])
colnames(odd)[1]<-"Odds Ratio"
odd
}
oddsr(mod)
1/2.9615
x<-matrix(c(22,12,13,21),nrow=2,ncol=2)
m<-conting(x)
mod<-glm(Y~X,family=binomial, data=m)
oddsr(mod)
?extab
m<-matrix(c(865,463,511,20,13,12,9,11,16),nrow=3,ncol=3)
m
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r+1){dat[i,c+1]<-sum(m[i,])
}
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat
dat[r+1,c+1]<-sum(dat[r+1,])
dat
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
dat
dat<-round(dat,2)
dat
dat[r+1,]<-round(dat[r+1,])
dat
dat[r+1,]<-round(dat[r+1,],0)
dat
m
<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
dat
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
dat<-round(dat,2)
}
extab(m)
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
dat<-round(dat,2)
dat
}
extab(m)
d<-dat[-4,-4]
d
m
m-d
(m-d)^2
(m-d)^2/d
sum((m-d)^2/d)
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat[-(r+1),-(c+1)]<-m
dat
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
dat<-round(dat,2)
dat
}
extab(m)
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat[-(r+1),-(c+1)]<-m
print(dat)
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
dat<-round(dat,2)
dat
}
extab(m)
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat[-(r+1),-(c+1)]<-m
print(dat)
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
print(round(dat[-(r+1),-(c+1)],2)
dat
}
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat[-(r+1),-(c+1)]<-m
print(dat)
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
print(round(dat[-(r+1),-(c+1)],2))
dat
}
extab(m)
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat[-(r+1),-(c+1)]<-m
print(dat)
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
print(round(dat[-(r+1),-(c+1)],2))
df<-(c-1)*(r-1)
chisq<-sum((m-dat[-(r+1),-(c+1)])^2/dat[-(r+1),-(c+1)])
print(chisq)
}
extab(m)
?chisq
?distribution
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat[-(r+1),-(c+1)]<-m
print(dat)
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
print(round(dat[-(r+1),-(c+1)],2))
df<-(c-1)*(r-1)
chi2<-sum((m-dat[-(r+1),-(c+1)])^2/dat[-(r+1),-(c+1)])
print(chi2)
p<-pchisq(chi2,df)
print(p)
}
extab(m)
extab<-function(m){    ## m is a RxC table
r<-length(m[,1]); c<-length(m[1,])
dat<-as.data.frame(matrix(ncol=c+1,nrow=r+1))
for (j in 1:c){dat[r+1,j]<-sum(m[,j])}
for (i in 1:r){dat[i,c+1]<-sum(m[i,])}
dat[r+1,c+1]<-sum(dat[r+1,1:c])
dat[-(r+1),-(c+1)]<-m
print(dat)
for (i in 1:r){
for (j in 1:c){
dat[i,j]<-dat[i,c+1]*dat[r+1,j]/dat[r+1,c+1]
}
}
print(round(dat[-(r+1),-(c+1)],2))
df<-(c-1)*(r-1)
chi2<-sum((m-dat[-(r+1),-(c+1)])^2/dat[-(r+1),-(c+1)])
print(chi2)
p<-pchisq(chi2,df,lower.tail = FALSE)
print(p)
}
extab(m)
yb<-c(4.5,7,10.5,7.5,6.5,6.5,6,8.5,7,5.5,8,7.5,3.5)
length(yb)
yb<-c(4.5,7,10.5,7.5,6.5,6.5,6,8.5,7,5.5,8,7.5,3.5)
ya<-c(7.5,7.5,10.5,8,8,6.5,7.5,9,7.5,6.5,8.5,7.5,4)
length(ya)
length(yb)
dif<-ya-yb
dif
mean(dif)
sd(dif)
(dif-mean(dif))^2/12
sum((dif-mean(dif))^2)/12
sqrt(sum((dif-mean(dif))^2)/12)
yb<-c(4.5,7,10.5,7.5,6.5,6.5,6,8.5,7,5.5,8,7.5,3.5)
ya<-c(7.5,7.5,10.5,8,8,6.5,7.5,9,7.5,6.5,8.5,7.5,4)
dif<-ya-yb
q8<-round(mean(dif),2); q8
q9<-round(sd(dif),2); q9
0.83/sqrt(13)
yb<-c(4.5,7,10.5,7.5,6.5,6.5,6,8.5,7,5.5,8,7.5,3.5)
ya<-c(7.5,7.5,10.5,8,8,6.5,7.5,9,7.5,6.5,8.5,7.5,4)
dif<-ya-yb
q8<-round(mean(dif),2); q8
q9<-round(sd(dif),2); q9
q10<-round(sd(dif)/sqrt(13),2); q10
ci<-mean(dif)+c(1,-1)*3.055*q10
ci
ci<-mean(dif)+c(-1,1)*3.055*q10
ci<-mean(dif)+c(-1,1)*3.055*q10
q11<-round(ci,2); q11
t.test(ya,yb,paired=TRUE,var.equal=TRUE)
?t.test
t.test(ya,yb,paired=TRUE,var.equal=TRUE,conf.level = 0.99)
q11
t.test(ya,yb,paired=TRUE,var.equal=FALSE,conf.level = 0.99)
yb<-c(4.5,7,10.5,7.5,6.5,6.5,6,8.5,7,5.5,8,7.5,3.5)
ya<-c(7.5,7.5,10.5,8,8,6.5,7.5,9,7.5,6.5,8.5,7.5,4)
dif<-ya-yb
q8<-round(mean(dif),2); q8
q9<-round(sd(dif),2); q9
q10<-round(sd(dif)/sqrt(13),2); q10
ci<-mean(dif)+c(-1,1)*3.055*q10
q11<-round(ci,2); q11
t.test(ya,yb,paired=TRUE,var.equal=TRUE,conf.level = 0.999)
m<-as.data.frame(matrix(c(0,5,1,93),ncol=2,nrow=2))
m
m<-as.data.frame(matrix(c(0,5,1,93),ncol=2,nrow=2))
rownames(m)<-c("Control+","Control-"); colnames(m)<-c("Case+","Case-")
m
p<-choose(6,5)*.5^5*.5^1
p
p<-choose(6,1)*.5^1*.5^5
p
m<-as.data.frame(matrix(c(0,5,1,93),ncol=2,nrow=2))
rownames(m)<-c("Control+","Control-"); colnames(m)<-c("Case+","Case-")
p<-choose(6,5)*.5^5*.5^1
q2<-round(2*p,2); q2
yb<-c(4.5,7,10.5,7.5,6.5,6.5,6,8.5,7,5.5,8,7.5,3.5)
mb<-mean(yb)
mb
ya<-c(7.5,7.5,10.5,8,8,6.5,7.5,9,7.5,6.5,8.5,7.5,4)
ma<-mean(ya)
ma-mb
dif<-ya-yb
q8<-round(mean(dif),2); q8
sa<-sd(ya)
sb<-sd(yb)
sa
sb
q9<-round(sd(dif),2); q9
(sa^2+sb^2)
y1<-c(100,89,83,98,108,95)
y2<-c(92,84,80,93,98,90)
t.test(y1,y2,paired=TRUE,var.equal=TRUE)
y1<-c(100,89,83,98,108,95)
y2<-c(92,84,80,93,98,90)
t.test(y2,y1,paired=TRUE,var.equal=TRUE)
m1<-mean(y1)
m2<-mean(y2)
m1
m2
m2-m1
s1<-sd(y1)
s2<-sd(y2)
s1
s2
var<-s1^2/6+s2^2/6
var
sqrt(var)
var<-s1^2/5+s2^2/5
sqrt(var/6)
var<-s1^2/6+s2^2/6
x<-c(489,526,150,321)
sum(x)
49/63
exp(1)/(1+exp(1))
x<-0.2-0.2*6
x
exp(x)/(1+exp(x))
beta<-0.2501
ods<-exp(beta)
q5<-round(ods,2); q5
beta<-.0532*10
ods<-exp(beta)
q7<-round(ods,2); q7
beta<-.0532
ods<-exp(beta)
q7<-round(ods,2); q7
l<-4.5821+0.0447*(10)-2.1084*(0)+0.1556*1+0.2501*1+0.0532*50
p<-exp(l)/(1+exp(l))
q9<-round(100*p,0);q9
p
.2*.15
.8*.01
0.03/(0.03+0.008)
n<-1000; p<-.55
se<-sqrt(p*(1-p)/n)
se
ci<-p+c(1,-1)*1.96*se
ci
n<-1000; p<-.55
se<-sqrt(p*(1-p)/n)
ci<-p+c(-1,1)*1.96*se
q22<-round(100*ci,0); q22
n=100; p=.5
m<-n*p; sd<-sqrt(n*p*(1-p))
m
sd
?pnorm
pnorm(65, mean = 50, sd = 5)
2*pnorm(65, mean = 50, sd = 5, lower.tail = FALSE)
n=100; p=.5
m<-n*p; sd<-sqrt(n*p*(1-p))
pval<-2*pnorm(65, m, sd, lower.tail = FALSE)
q5<-roun(pval,3); q5
n=100; p=.5
m<-n*p; sd<-sqrt(n*p*(1-p))
pval<-2*pnorm(65, m, sd, lower.tail = FALSE)
q5<-round(pval,3); q5
n=100; p=.05
m<-n*p; sd<-sqrt(n*p*(1-p))
m
sd
t<-c(m," +-",sd)
t
t<-c(m," +-",round(sd,0))
t
?parse
n=100; p=.05
m<-n*p; sd<-sqrt(n*p*(1-p))
q15<-c(m," +-",round(sd,0)); q15
wd()
getwd()
setwd("C:/Users/rafiel/Google Drive/(COURSERA)/05 Reproducible Research/Peer Assessments/PA1")
data<-read.csv("activity.csv")
library(dplyr)
days<-group_by(data,date)
dsteps<-summarize(days,total=sum(steps,na.rm=TRUE))
hist(dsteps$total) ##Makes a histogram of the total number of steps taken each day
dsteps_mean<-mean(dsteps$total)
dsteps_median<-median(dsteps$total)
days
dsteps
head(data)
length(unique(as.numeric(data$date)))
getwd()
setwd("C:/Users/rafiel/Desktop/coursera")
knit2html("pepelusa.Rmd")
if (interactive()) browseURL("pepelusa.html")
load(knitr)
knit2html("pepelusa.Rmd")
if (interactive()) browseURL("pepelusa.html")
require(knitr)
load(knitr)
knit2html("pepelusa.Rmd")
if (interactive()) browseURL("pepelusa.html")
interval<-group_by(data,interval)
isteps<-summarize(interval,total=sum(steps,na.rm=TRUE))
isteps<-mutate(isteps,average=round(total/61,2))  ##length(unique(as.numeric(data$date)))
id<-isteps==max(isteps$average)
max_int<-isteps$average[id] ##5-minute interval containing max number of steps
plot(isteps$interval,isteps$average,type="l") ##makes time series plot of the 5-minute interval
sum(is.na(data$steps)) ##Calculates and reports the total number of missing values
newdata<-data
newdata<-mutate(newdata, average=rep(isteps$average,61)) ##adds average for interval
id<-is.na(newdata$steps)
newdata$steps[id]<-newdata$average[id]
newdata<-select(newdata,1:3)
newdays<-group_by(newdata,date)
newdsteps<-summarize(newdays,total=sum(steps))
hist(newdsteps$total) ##MakeS a histogram of the total number of steps taken each day
newdsteps_mean<-mean(newdsteps$total)
newdsteps_median<-median(newdsteps$total)
newdata$date<-as.Date(newdata$date)
dias<-weekdays(newdata$date)
weekend<-c("sábado","domingo")
newdata<-mutate(newdata,weekend=as.factor(dias %in% weekend))
levels(newdata$weekend)[levels(newdata$weekend)=="TRUE"] <- "weekend"
levels(newdata$weekend)[levels(newdata$weekend)=="FALSE"] <- "weekday"
datos<-split(newdata,newdata$weekend)
wdays<-datos[[1]];wend<-datos[[2]]
head(wdays)
head(wend)
plotint<-function(dat) {##makes time series plot of the 5-minute interval
interval<-group_by(dat,interval)
isteps<-summarize(interval,total=sum(steps,na.rm=TRUE))
isteps<-mutate(isteps,average=round(total/length(unique(as.numeric(dat$date))),2))
id<-isteps==max(isteps$average)
print(length(unique(as.numeric(dat$date))))
plot(isteps$interval,isteps$average,type="l", xlab="interval",ylab="Average number of steps")
}
plotint(wdays)
plotint(wend)
plotint(isteps)
plotint(data)
head(data)
x<-"interval"
x
x
plotint<-function(dat) {##makes time series plot of the 5-minute interval
interval<-group_by(dat,interval)
isteps<-summarize(interval,total=sum(steps,na.rm=TRUE))
isteps<-mutate(isteps,average=round(total/length(unique(as.numeric(dat$date))),2))
id<-isteps==max(isteps$average)
print(length(unique(as.numeric(dat$date))))
x<-"interval"
plot(isteps$interval,isteps$average,type="l", xlab=x,ylab="Average number of steps")
}
plotint(wdays)
plotint<-function(dat,tit) {##makes time series plot of the 5-minute interval
interval<-group_by(dat,interval)
isteps<-summarize(interval,total=sum(steps,na.rm=TRUE))
isteps<-mutate(isteps,average=round(total/length(unique(as.numeric(dat$date))),2))
id<-isteps==max(isteps$average)
print(length(unique(as.numeric(dat$date))))
x<-"interval"
plot(isteps$interval,isteps$average,type="l", title=tit,xlab=x,ylab="Average number of steps")
}
plotint(wdays,"weekdays")
plotint<-function(dat,tit) {##makes time series plot of the 5-minute interval
interval<-group_by(dat,interval)
isteps<-summarize(interval,total=sum(steps,na.rm=TRUE))
isteps<-mutate(isteps,average=round(total/length(unique(as.numeric(dat$date))),2))
id<-isteps==max(isteps$average)
print(length(unique(as.numeric(dat$date))))
x<-"interval"
plot(isteps$interval,isteps$average,type="l", main=tit,xlab=x,ylab="Average number of steps")
}
warnings()
plotint<-function(dat,tit) {##makes time series plot of the 5-minute interval
interval<-group_by(dat,interval)
isteps<-summarize(interval,total=sum(steps,na.rm=TRUE))
isteps<-mutate(isteps,average=round(total/length(unique(as.numeric(dat$date))),2))
id<-isteps==max(isteps$average)
print(length(unique(as.numeric(dat$date))))
x<-"interval"
plot(isteps$interval,isteps$average,type="l", main=tit,xlab=x,ylab="Average number of steps")
}
plotint(wdays,"weekdays")
plotint<-function(dat,title) {##makes time series plot of the 5-minute interval
interval<-group_by(dat,interval)
isteps<-summarize(interval,total=sum(steps,na.rm=TRUE))
isteps<-mutate(isteps,average=round(total/length(unique(as.numeric(dat$date))),2))
id<-isteps==max(isteps$average)
print(length(unique(as.numeric(dat$date))))
x<-"interval";y<-"Average number of steps"
plot(isteps$interval,isteps$average,type="l", main=title,xlab=x,ylab=y)
}
plotint(wdays,"weekdays")
plotint(wend,"weekends")
plotint(data,"all days")
setwd("C:/Users/rafiel/RepData_PeerAssessment1")
require(knitr)
load(knitr)
knit2html("PA1_template.Rmd")
